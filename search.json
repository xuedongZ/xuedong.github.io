[{"title":"My New Post","url":"/2019/02/07/My-New-Post/"},{"title":"JSON和JSONP傻傻分不清楚","url":"/2019/01/14/JSON和JSONP傻傻分不清楚/","content":"\n其实json和jsonp本质上都是字符串，只是jsonp是外层包裹了一层函数。\n\n## JSON\nJSON是JavaScript对象记法（JavaScript Object Notation），它有很多好处，规模、可读性等，还有另外一点：他是Web上最流行语言（JavaScript）的内置记法。JSON 是存储和交换文本信息的语法，类似 XML。但JSON 比 XML 更小、更快，更易解析。\n\n### XML让位，JSON登场\n曾几何时，我们都把XML当作救星，这是一种人类可读、机器可解析的数据格式，也是原本要支持世界上所有数据需求的数据格式。刚开始开发XMLhttpRequest时，XML确实是大家交互数据采用的方法。\nXML 和所谓 HTML 的写法非常相似。XML 没有预定义的标签。在 HTML 中使用的标签（以及 HTML 的结构）是预定义的。HTML 文档只使用在 HTML 标准中定义过的标签。XML 允许创作者定义自己的标签和自己的文档结构。\n\n下面有这样一个资料：\n> 一个『名字』叫做多拉Ａ梦，身高『129.3』，体重『129.3』，喜欢的事物有吃『铜锣烧』和『机油』，以及『和小咪约会』的机器人。\n\n【用XML方式存储】：\n```\n<robot>\n\t<name>多拉A梦</name>\n\t<height>129.3</height>\n\t<weight>129.3</weight>\n\t<hobby>\n\t\t<food>铜锣烧、机油</food>\n\t\t<relationship>和小咪约会</relationship>\n\t</hobby>\n</robot>\n```\n\n不过这个世界日新月异，如今我们可以获取各种各样的数据格式(CSV、Excel、XML、JSON、yaml)。目前数据交互更多的是JSON请求。\nJSON 是存储和交换文本信息的语法。类似 XML。JSON 比 XML 更小、更快，更易解析。\n【用JSON方式存储】：\n\n```\n{\n\t“name” : “多拉A梦”,\n\t“height”: 129.3,\n\t“weight”:129.3,\n\t“hobby”:{\n\t\t“food” : “铜锣烧、机油”,\n\t\t“relationship” : “和小咪约会”\n\t}\n}\n```\n\n是不是易读多了呢。\n### JSON语法\nJSON所表示的数据要么就是对象，要么就是数组。\n[从结构上看，所有的数据（data）最终都可以分解成三种类型](http://www.ruanyifeng.com/blog/2009/05/data_types_and_json.html)：\n\n- 第一种类型是标量（scalar），也就是一个单独的字符串（string）或数字（numbers），比如\"北京\"这个单独的词。\n\n- 第二种类型是序列（sequence），也就是若干个相关的数据按照一定顺序并列在一起，又叫做数组（array）或列表（List），比如\"北京，上海\"。\n\n- 第三种类型是映射（mapping），也就是一个名/值对（Name/value），即数据有一个名称，还有一个与之相对应的值，这又称作散列（hash）或字典（dictionary），比如\"首都：北京\"。\n\n数据构成的最小单位原来如此简单！难怪在编程语言中，只要有了数组（array）和对象（object）就能够储存一切数据了。\nJSON语法是javaScript语法的子集，javaScript用[]中括号来表示数组，用{}大括号来表示对象，JSON亦是如此。\n\n【JSON数组】：\n```\nvar employees = [\n    { \"firstName\":\"Bill\" , \"lastName\":\"Gates\" },\n    { \"firstName\":\"George\" , \"lastName\":\"Bush\" },\n    { \"firstName\":\"Thomas\" , \"lastName\": \"Carter\" }\n];\n```\n【JSON对象】：\n```\nvar obj = {\n\n    age: 20,\n    str: \"xiaoming\",\n    method: function () {\n        alert(\"我爱学习\");\n    }\n};\n```\n当然啦，数组可以包含对象，在对象中也可以包含数组。\n### JSON的规则\nJSON能够以非常简单的方式来描述数据结构，XML能做的它都能做，因此在跨平台方面两者完全不分伯仲。\n\n1、JSON只有两种数据类型描述符，大括号{}和方括号[]，其余英文冒号:是映射符，英文逗号,是分隔符，英文双引号\"\"是定义符。\n\n2、大括号{}用来描述一组“不同类型的无序键值对集合”（每个键值对可以理解为OOP的属性描述），方括号[]用来描述一组“相同类型的有序数据集合”（可对应OOP的数组）。\n\n3、上述两种集合中若有多个子项，则通过英文逗号,进行分隔。\n\n4、键值对以英文冒号:进行分隔，并且建议键名都加上英文双引号\"\"，以便于不同语言的解析。\n\n5、JSON内部常用数据类型无非就是字符串、数字、布尔、日期、null 这么几个，字符串必须用双引号引起来，其余的都不用，日期类型比较特殊，这里就不展开讲述了，只是建议如果客户端没有按日期排序功能需求的话，那么把日期时间直接作为字符串传递就好，可以省去很多麻烦。\n\n\n## JSONP\nJSONP是服务器与客户端跨源通信的常用方法。最大特点就是简单适用，老式浏览器全部支持，服务器改造非常小。\n\n它的基本思想是，网页通过添加一个`<script>`元素，向服务器请求JSON数据，这种做法不受同源政策限制；服务器收到请求后，将数据放在一个指定名字的回调函数里传回来。\n\n首先，网页动态插入`<script>`元素，由它向跨源网址发出请求。\n\n```\nfunction addScriptTag(src) {\n  var script = document.createElement('script');\n  script.setAttribute(\"type\",\"text/javascript\");\n  script.src = src;\n  document.body.appendChild(script);\n}\n\nwindow.onload = function () {\n  addScriptTag('http://example.com/ip?callback=foo');\n}\n\nfunction foo(data) {\n  console.log('Your public IP address is: ' + data.ip);\n};\n```\n上面代码通过动态添加`<script>`元素，向服务器example.com发出请求。注意，该请求的查询字符串有一个callback参数，用来指定回调函数的名字，这对于JSONP是必需的。\n\n服务器收到这个请求以后，会将数据放在回调函数的参数位置返回。\n\n```\nfoo({\n  \"ip\": \"8.8.8.8\"\n});\n```\n由于`<script>`元素请求的脚本，直接作为代码运行。这时，只要浏览器定义了foo函数，该函数就会立即调用。作为参数的JSON数据被视为JavaScript对象，而不是字符串，因此避免了使用JSON.parse的步骤。\n\n以上。\n\n---\n参考文章：\n1.[【原创】说说JSON和JSONP，也许你会豁然开朗，含jQuery用例](https://www.cnblogs.com/dowinning/archive/2012/04/19/json-jsonp-jquery.html)\n2.[基本資料格式: XML 和 JSON](https://ithelp.ithome.com.tw/articles/10203632?sc=iThelpR)\n3.[面试问题之：JSON是什么？](https://blog.csdn.net/u011240877/article/details/46651249)\n4.[JSON与JS对象的区别](https://blog.csdn.net/Yeoman92/article/details/54924930)\n5.[浏览器同源政策及其规避方法](http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html)\n","tags":["JavaScript"]},{"title":"HTML中关于JavaScript和dom的基础知识","url":"/2019/01/05/关于JavaScript和dom的基础知识/","content":"\n\n\n## JavaScript的工作方式\n\n1.编写\n\n编写HTML标记和JavaScript代码，并把他们放在文件中，比如说index.html和index.js （或者也可以都放在HTML文件中）\n\n2.加载\n\n浏览器获取并加载你的页面，从上到下解析你的内容。\n遇到JavaScript时，浏览器会解析代码，检查它的正确性，然后执行代码。\n浏览器还会建立HTML页面的一个内部模型，称为DOM。\n\n3.运行\n\nJavaScript继续执行，使用DOM检查页面、完成修改、从页面接受事件，或者要求浏览器从web服务器获取其他数据。\n\n## JavaScript能做什么？\n一旦有一个包含`<script>`元素的页面（或者包含引用，指向一个单独的JavaScript文件），你就已经在开始编写代码了。JavaScript是一个完备的编程语言，用其他语言能做到的事情用JavaScript同样能做到，甚至还能做的更多，因为我们就在web页面内部编程！\n\n我们可以用JavaScript：\n- 建立一个语句（语句）\n- 重复做事情（循环）\n- 做出判断（条件）\n- 声明变量，赋值变量      \n  \n> 命名变量要符合三个要求：   \n1.变量要以一个字母、下划线或者美元符开头。   \n2.然后可以使用任意多个字母、数字、下划线或美元符。   \n3.一定要避开JavaScript的所有保留字。\n\n- 构建表达式\n\n  JavaScrit中表达式无处，不在一定要知道可以表达哪些内容：\n\n  1).数值表达式\n\n  ```\n  (9/5) * tempC + 32;\n  x - 1;\n  Math.random() * 10;\n  2.123 + 3.2;\n  ```\n  2).布尔表达式\n\n  ```\n  2 > 3;\n  startTime > now;\n  tempF < 75;\n  pet = \"Duck\";\n  level == 4;\n  ```\n  3).串表达式\n\n  ```\n  \"super\" + \"cali\" + youKnowTheRest;\n  \"March\" + \"21\" + \"st\";\n  p.innerHTML;\n  phoneNumber.substring(0,3);\n  ```\n\n  4).其他表达\b式\n\n  ``` \n  function () {...};\n  document.getElementById(\"pink\");\n  new Array(10);\n  ```\n\n## 在页面中增加JavaScript，怎么加？在那里加？\n\n要使用JavaScript，肯定必须把它增加到一个Web页面中。不过在哪里加呢？另外怎么加？我们已经知道有一个`<script>`元素，所以下面来看在哪里使用这个元素，另外它会如何影响页面中JavaScript的执行。向页面增加代码JavaScript的执行。向页面增加代码有三种不同的方式：\n\n**1.联机放在`<head>`元素中。**\n\n向页面增加代码时，最常见的方式就是在`<head>`部分放置一个`<script>`元素。在`<head>`元素中增加JavaScript代码时，一旦浏览器开始解析head部分就会执行这个代码（这会最先执行），然后才解析页面的其余部分。\n\n**2.通过引用一个单独的JavaScript文件来增加脚本。**\n\n还可以链接到一个包含JavaScript代码的单独文件。将这个文件的URL放在开始`<script>`标记的src属性中，另外一定要用`</script>`结束这个脚本元素。如果链接到同一目录中的某个文件，可以只使用该文件名（无需提供完整的路径）。\n\n```\n<head>\n<script src=\"mycode.js\"></script>\n</head>\n```\n\n**3.将代码增加到文档体中，可以作为内联代码，也可以作为一个单独文件链接。**\n\n同样有可用`<script>`直接引用或间接引用。\n\n## JavaScript如何与页面交互\n\n1.在浏览器中加载一个页面时，浏览器和解析 HTML，并创建文档的一个内部模型其中包含HTML标记中的所有元素。\n\n![我们把他简称为DOM](https://ws4.sinaimg.cn/large/006tNc79gy1fywx8ral7uj31a80t4wfj.jpg)\n\n2.JavaScript可以与DOM交互来访问元素以及元素中的内容。Javascript还可以使用DOM来创建或删除元素（当然还可以做很多其他事情）\n\n\n\n3.JavaScript修改了DOM时，浏览器会动态更新页面，所以你会看到页面上的新内容。\n\ndocument表示浏览器中的整个页面，它包含完整的DOM，所以可以让它做任何事情。\n\n- 比如查找有一个特定id的元素。\n\n  `var planet = document.getElementById(\"greenplanet\")`;\n\n  比如替换该id的内容。\n\n  `planet.innerHTML = \"Red Alert: hit by phaser fire!\";`\n\n- 页面完全加载前不要打扰DOM\n\n  ``` \n  <script>\n  function init() {\n      var planet = document.getElementById(\"greenplanet\");\n      planet.innerHTML = \"Red Alert: hit by phaser fire!\";\n  }\n  windown.onload = init\n  </script>\n  ```\n\n- 向DOM创建或增加元素\n\n- 从DOM删除元素\n\n- 获取和设置元素的属性\n\n\n\n  总之，HTML的DNA由描述性标记构成，允许你描述构成页面的一组嵌套元素。另一面，JavaScript却是由纯算法性基因物质构成，主要用来描述计算。\n\n  虽然他们的基因有天壤之别，好在他们有共同之处：DOM。于是通过DOM，JavaScript就能和页面互相通信。而且通信的方法有很多种。而如今各种前端框架的盛行，就是事先搭建，包装好了底层的dom操作，让工程师更多关于业务逻辑。代码的工程繁琐度也再不断降低。\n","tags":["JavaScript"]},{"title":"信息时代看信息","url":"/2018/10/18/信息时代看信息/","content":"\n年初，听了张首晟教授“大道至简”的讲座，\b到现在仍印象深刻。作为一个杰出的物理学家，他的抽象能力很强，提出世间的一切物体都是信息的载体。\bE=mC²就是一个很好的证明。如今他英年早逝，倍感惋惜。也许像查理忙格所说，能力都是有边界\b的，没有边界的能力不能算是能力。然而，张教授的话给\b人们带来的启发，确是实实在在的。\n\n## 认识信息\n对此，我想到的是行业演变：随着生产力的发展，我们越来越脱离体力劳作。\n生产力的进步\b，人类的活动中心已不仅仅是打猎、和物质资料生产这些基本生存相关的事务。而相对人类文明的漫长历史，在近来短短 60、70 年间，人类几乎在全球范围内做到衣食无忧，活动重心向\b工业、商业转移\b。比如，中国近 40 年来农业人口由 80% 降到了 40%。\n\n\b我们服务行业从业者，工作处理的对象越来越偏向纯粹的信息。甚至这些信息不依付于实体，比如文娱产业、游戏产业、金融行业。上游产业大体是高利润的行业。比如[2018年金融企业净利润占中国500强企业净\b利润近一半](https://zhuanlan.zhihu.com/p/43617174)。张首晟也提到传统产业\b只能做到线性增长，而信息产业可以做到指数级增长。所以他2017年 all in 区块链，可惜的是没做好风控，操之过急，\b几乎\b以惨败收场，于是酿造了悲剧。但他说的趋势是对的。人类与其他物种的重要区别就是会利用工具，只要人类文明存在，科技对生产力的改进不会停止。\n\n## \b应对信息\n既然我们如今大部分产业都有很高的信息属性，信息在我们生活中的权重越来越高，那我们如何和信息打交道，就是一个很重要的生存技能了。类似于计算机，也就输入、处理、输出这三个环节了。\n\n### 输入信息的渠道  \n我们最好的渠道是出版书籍了，毕竟这种资料是作者经过调研，有数据研究支撑，不是信口开河列出来。而且由于文字呈现，其数理支撑、逻辑漏洞也容易被发现.\n\n优秀的论文也是很好的信息渠道。前提你要会用学术论文检索。这些信息可能比集成出书领先几年，所以有时间优势。同样，原版书比翻译书也有时间优势。\n\n然后是各个优质多媒体渠道了。门户网站、个人网站博客、微信公众号等消息及时，信息面比较宽（组合起来看）。缺点就是知识不成体系，甚至好多信息生命周期很短。      \n\n### 如何处理信息\n此处说的处理指内化信息，不仅仅是对信息机械的复制、收藏。想要高效地处理信息，我们需要打好的数理、逻辑等基本\b功。逻辑、概率统计、历史观等价值层面的东西会成为你很有效的信息筛子，轻而易举的过滤出信息杂质。\n比如你认真学过概率，就不会对赌博信息产生任何不切实际的情感期待。比如某药物自称有效，但未通过双盲验证，这种所谓的有效便大打折扣；比如犯了否定前件、\b肯定后件的错误，给人以正确的假象，其实是逻辑硬伤...以上这些不一而足。\n\n### 如何输出信息\n输出方式有演讲、写作、\b面谈等。而面谈的可复用性和规模存在劣势，不适合价值类信息的\b批量传递。这次主要谈演讲和写作。\n\n**1）演讲**  \n人生第一次演讲是在大学毕业就业研究会上。\b每个人第一次大场面演讲，情形应该都差不多\b，结果不用说也应该知道啦。当时的练习是进行十分钟自我介绍。抽签上去的同学一个个都紧张兮兮，不知如何应对。\n\n首先，从技巧层面：\n为什么我们普通人会害怕\b演讲？甚至有排在人类10大恐惧之首的夸张说法？后来我看到别人文章，发现这跟人见到蛇就于生俱来的恐惧是一样的。大致如下：\n> 在原始社会，我们做的最多的事情是跟随，我们跟随着一起去摘果子，跟随着一起去打猎。我们身体的朝向往往都是一个方向，个别时候与同伴面对面交流。当我们一个人被无数双眼睛盯着\b的时候，事情就不妙了，你可能正在被整个部落审讯、对峙。   \n原始社会，人类生活危机四伏，一个小的错误就可能招致一波“团灭”。于是人类非常恐惧错误，如果有一些很小的问题，他们通常会放大，并立即传播出去，让问题得以解决。  \n而当你在公众场合，被部落、族群无数双眼睛对峙时，显然是犯了相当“严重”的错误，交代不好等着你的可能是流放、火烧之类的残酷结果，怎能不慌。\n\n知道这层关系，我们演讲的包袱是不是会小很多呢？心理障碍解决了，接下来才是各种辅助技巧的应用，比如讲前深呼吸、比如如何排练，比如如何背诵，比如只使用自己的语言风格。\n\n其次，从内容层面：\n其实任何演讲技能都不是最重要的，最核心的是干货，一个涉世未深，对任何领域都没有任何研究，你自然无从讲起。光抖机灵的话对不起观众付出的时间。在你的目标听众面前，他们的认同与否，维系在你的内容质量上。此处目标听众的选择也很重要，如果对方不具备一些背景知识你就是对牛谈琴，比如跟我奶奶老人家谈人工智能。作为一个成熟的讲者，必须要照顾到听众与所讲主题的相关性，否则，你在讲演之前就为受众普及基础知识，否则你就选错了对象，或者你选错了话题。\n\n我想每个人步入社会后，总有一天会成为领导的（自己的领导，小组的领导，团队的领导。。。）。哪怕在家中，至少总有一天你会成为家长。演说是当一个好领导的必备技能，值得好好练习。此处推荐一本书《TED Talks: The Official TED Guide to Public Speaking》\n\n**2）写作**\n\n\b由于演讲需要一定的场景，且需要听众的配合，我想普通人可行、成本最低方式就是写作了。就像现在我可劲儿的写，豪不担心别人泼冷水。\n至于为什么要写作可参看刘未鹏的文章\n[为什么你应该（从现在开始就）写博客 – 刘未鹏](http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/)\n　\n大多数人由于应试教育出来，当年都是写的应试作文，并没有在文法上得到有效训练。\b理工背景的大学院校似乎也不\b并强调这方面的能力。即使工作了也没有这方面的意识，比如我就是这样。工作头几年也没在文字、演说上刻意练习。\b局限在用工程语言与人交流\b，为数不多的演说场景就是在业主启动会、政府相关审批会上介绍工程概况。说的仍然是工程语言。\n\n然而，人类自然语言发明之初，就是用来描述世间一切事物的。互相交流信息、传递经验的。一个用来思考一切和表达一切的利器，你却不用它或者只是局限的场景使用它，是不是有些浪费呢。\n没有人限制你在任何领域去用\b自然语言去思考啊。你对这个世界的感知难道就仅限于你从事的特定领域。局限在某个领域内获得某种标签式的认同，是圈地自萌还是自取其辱。\b带上好奇心，使用这个利器认识真实的世界吧。\n\n写作\b好处有很多，除了传递信息、积累影响力，在心理学上，描述性写作还是一种重要的心理干预疗法呢。每天写15~20分钟，可以有效改善人的身心健康，让免疫系统更加健壮，甚至整个生活都发生巨大的改变。这个方法是 Pennebaker 教授发现的，网上有很多关于他的报道。\n选一篇参考文章：\b[写走焦虑，表现更好 ](https://www.guokr.com/article/66810/)\n\n\n那\b我作为普通人如何练习写作呢？也只有一点一滴开始，把它当作自己的思考工具，一篇一篇练习下去，总归会有所收获。\n\n### 辅助办法\n靠脑力来记忆信息会很费力，也无必要，好在我们有很多外在的工具可以对信息进行检索、收藏和整理。\n\n- 坚定地使用google，百度就算了吧。\n- 使用聚合类工具阅读信息，比如RSS。\n统一订阅自己关心的各平台，不管是博客，网站还是公众号文章。直接从原始网站拉取主体信息呈现给用户。由于这样做去除广告没，纯粹的内容没有盈利模式，不少聚合软件停服。但RSS聚合用户群不会消失。\n- 寻找某项知识优先检索书籍\n把epub格式的电子书存在电脑中，进行全文检索（参考[MacOS Spotlight 添加全文检索epub图书－详细版](https://www.jianshu.com/p/3ef37a745198)\n），连读书笔记都可以省了。\n- 使用笔记类软件做自己的知识管理工具\n比如wiz、evernote、有道云。\n- 使用剪藏工具收集临时信息\n比如，文章摘录，可利用pocket、evernote、instapper一键收藏。滴答清单也可以一键发送链接。\n\n\n以上这些小窍门，可在[少数派](https://sspai.com/)之类的网站上找到。但这类文章看多了就会感觉是为了使用工具而使用工具，有时还是需要搞清自己真正要解决的问题。\n\n## 总结\n很有幸，我们生存于互联网时代，信息的传递如此便捷（这也是把双刃剑）。希望每个生命节点都能获得自己真正需要的信息。\n\n\n","tags":["随想"]}]